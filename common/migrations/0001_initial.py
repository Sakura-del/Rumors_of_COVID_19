# Generated by Django 3.1.5 on 2021-04-25 16:08

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrazilDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'brazil_daily_data',
            },
        ),
        migrations.CreateModel(
            name='CurrentCovidGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_confirmed', models.JSONField()),
                ('confirmed', models.JSONField()),
                ('death', models.JSONField()),
                ('cured', models.JSONField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'current_covid_global',
            },
        ),
        migrations.CreateModel(
            name='CurrentCovidInternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_confirmed', models.JSONField()),
                ('abroad', models.JSONField()),
                ('current_asym', models.JSONField()),
                ('confirmed', models.JSONField()),
                ('death', models.JSONField()),
                ('cured', models.JSONField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'current_covid_internal',
            },
        ),
        migrations.CreateModel(
            name='CurrentCovidNational',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('island', models.CharField(max_length=200)),
                ('island_data', models.JSONField()),
                ('island_nation_data', models.JSONField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'current_covid_national',
            },
        ),
        migrations.CreateModel(
            name='CurrentCovidProvinces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=200)),
                ('overall_data', models.JSONField()),
                ('city_data', models.JSONField()),
                ('extra_info', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'current_covid_provinces',
            },
        ),
        migrations.CreateModel(
            name='CurrentVaccinations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=200)),
                ('total_vaccinations', models.IntegerField()),
                ('new_vaccinations', models.IntegerField()),
                ('total_vaccinations_per_hundred', models.FloatField()),
                ('date', models.DateField(default=datetime.datetime(2021, 4, 25, 16, 8, 24, 740107))),
            ],
            options={
                'db_table': 'current_vaccinations',
            },
        ),
        migrations.CreateModel(
            name='CurrentVaccinesNations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(db_index=True, max_length=200)),
                ('date', models.CharField(max_length=200)),
                ('vaccines', models.CharField(max_length=200)),
                ('total_vaccinations', models.CharField(max_length=200)),
                ('total_vaccinations_per_hundred', models.FloatField()),
            ],
            options={
                'db_table': 'current_vaccines_nations',
            },
        ),
        migrations.CreateModel(
            name='DesignatedHospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provinceName', models.CharField(db_index=True, max_length=200)),
                ('citys', models.JSONField(default=list)),
                ('cityCnt', models.IntegerField()),
            ],
            options={
                'db_table': 'designated_hospital',
            },
        ),
        migrations.CreateModel(
            name='FranceDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'france_daily_data',
            },
        ),
        migrations.CreateModel(
            name='GermanyDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'germany_daily_data',
            },
        ),
        migrations.CreateModel(
            name='GlobalDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'global_daily_data',
            },
        ),
        migrations.CreateModel(
            name='HeadlinesNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('link', models.URLField(default='')),
                ('date', models.CharField(db_index=True, max_length=200)),
                ('field', models.CharField(max_length=200)),
                ('summary', models.CharField(max_length=10000)),
                ('tag_list', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'headline_news',
            },
        ),
        migrations.CreateModel(
            name='InternalDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'interval_daily_data',
            },
        ),
        migrations.CreateModel(
            name='ItalyDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'italy_daily_data',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('thumb_nail', models.URLField(default='')),
                ('top_big_img', models.JSONField(default=list)),
                ('category_id', models.CharField(max_length=200)),
                ('category_name', models.CharField(max_length=200)),
                ('category_cn', models.CharField(default='', max_length=200)),
                ('sub_category_name', models.CharField(max_length=200)),
                ('sub_category_cn', models.CharField(max_length=200)),
                ('tags', models.JSONField(default=list)),
                ('media_name', models.CharField(max_length=200)),
                ('article_id', models.CharField(max_length=200)),
                ('comment_num', models.CharField(max_length=200)),
                ('publish_time', models.CharField(max_length=200)),
                ('update_time', models.DateTimeField()),
                ('img', models.URLField()),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='PerTrendVaccinesNations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=200)),
                ('data', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'per_trend_accines_nations',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('question_text', models.TextField(default='', max_length=1000)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='RiskLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('province', models.CharField(db_index=True, max_length=200)),
                ('low_level_count', models.IntegerField()),
                ('medium_level_count', models.IntegerField()),
                ('high_level_count', models.IntegerField()),
                ('city_list', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'risk_level',
            },
        ),
        migrations.CreateModel(
            name='RumorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('author', models.CharField(default='中国互联网联合辟谣', max_length=200)),
                ('authordesc', models.CharField(default='中国互联网联合辟谣', max_length=200)),
                ('date', models.CharField(db_index=True, max_length=200)),
                ('markstyle', models.CharField(default='fake', max_length=200)),
                ('result', models.CharField(default='假', max_length=200)),
                ('explain', models.CharField(default='谣言', max_length=200)),
                ('abstract', models.TextField(db_index=True, max_length=1000)),
                ('tag', models.JSONField(db_index=True, default=list)),
                ('type', models.IntegerField(default=1)),
                ('videourl', models.CharField(default='', max_length=200)),
                ('cover', models.CharField(default='', max_length=200)),
                ('coverrect', models.CharField(default='', max_length=200)),
                ('coversqual', models.CharField(default='', max_length=200)),
                ('section', models.CharField(default='', max_length=200)),
                ('iscolled', models.BooleanField(default=False)),
                ('arttype', models.CharField(default='normal', max_length=200)),
            ],
            options={
                'db_table': 'rumor_info',
            },
        ),
        migrations.CreateModel(
            name='RussiaDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'russia_daily_data',
            },
        ),
        migrations.CreateModel(
            name='SpainDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'spain_daily_data',
            },
        ),
        migrations.CreateModel(
            name='TestAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(db_index=True, max_length=200)),
                ('count', models.IntegerField()),
                ('data', models.JSONField()),
            ],
            options={
                'db_table': 'test_agent',
            },
        ),
        migrations.CreateModel(
            name='TotalTrendVaccinesNations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(db_index=True, max_length=200)),
                ('data', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'total_trend_vaccines_nations',
            },
        ),
        migrations.CreateModel(
            name='TravelPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(db_index=True, max_length=200)),
                ('city', models.CharField(db_index=True, max_length=200)),
                ('district', models.CharField(max_length=200)),
                ('leave_policy_list', models.JSONField(default=list)),
                ('back_policy_list', models.JSONField(default=list)),
                ('stay_info_list', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'travel_policy',
            },
        ),
        migrations.CreateModel(
            name='TrendVaccinesInternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=200)),
                ('date', models.CharField(max_length=200)),
                ('total_vaccinations', models.IntegerField()),
                ('total_vaccinations_per_hundred', models.FloatField()),
            ],
            options={
                'db_table': 'trend_vaccines_internal',
            },
        ),
        migrations.CreateModel(
            name='UKDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'uk_daily_data',
            },
        ),
        migrations.CreateModel(
            name='USDailyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateId', models.IntegerField()),
                ('confirmedCount', models.IntegerField()),
                ('confirmedIncr', models.IntegerField()),
                ('curedCount', models.IntegerField()),
                ('curedIncr', models.IntegerField()),
                ('currentConfirmedCount', models.IntegerField()),
                ('currentConfirmedIncr', models.IntegerField()),
                ('deadCount', models.IntegerField()),
                ('deadIncr', models.IntegerField()),
                ('highDangerCount', models.IntegerField()),
                ('midDangerCount', models.IntegerField()),
                ('suspectedCount', models.IntegerField()),
                ('suspectedCountIncr', models.IntegerField()),
            ],
            options={
                'db_table': 'us_daily_data',
            },
        ),
        migrations.CreateModel(
            name='VaccinationPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('province', models.CharField(db_index=True, max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('district', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('tel', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'vaccination_point',
            },
        ),
        migrations.CreateModel(
            name='VaccineStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=200)),
                ('progress', models.CharField(max_length=200)),
                ('vaccine_name', models.CharField(max_length=200)),
                ('vaccine_type', models.CharField(max_length=200)),
                ('update_time', models.DateTimeField(default=datetime.datetime(2021, 4, 25, 16, 8, 24, 743100))),
            ],
            options={
                'db_table': 'vaccine_status',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('answer_date', models.DateTimeField(auto_now_add=True)),
                ('questionid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.question')),
            ],
            options={
                'db_table': 'answer',
            },
        ),
    ]
